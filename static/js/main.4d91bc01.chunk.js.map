{"version":3,"sources":["components/Layout.js","App.js","reportWebVitals.js","index.js"],"names":["Layout","renderSmallCell","placed","Grid","item","Paper","style","backgroundColor","height","width","renderLargeCell","renderCell","prim","renderColumn","elem","container","direction","map","wrap","justify","this","props","layout","col","i","Component","App","state","loadWasm","a","wasm","setState","init","console","error","message","clearLayout","randomLayout","random","Container","maxWidth","className","Button","variant","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAkDeA,E,4MA5CXC,gBAAkB,SAACC,GACf,OACI,cAACC,EAAA,EAAD,CAAMC,MAAI,EAAV,SACI,cAACC,EAAA,EAAD,CAAOC,MAAO,CAAEC,gBAAiBL,EAAS,UAAY,UAAWM,OAAO,GAAIC,MAAO,S,EAK/FC,gBAAkB,SAACR,GACf,OACI,cAACC,EAAA,EAAD,CAAMC,MAAI,EAAV,SACI,cAACC,EAAA,EAAD,CAAOC,MAAO,CAAEC,gBAAiBL,EAAS,UAAY,UAAWM,OAAO,GAAIC,MAAO,S,EAK/FE,WAAa,SAACC,EAAMV,GAChB,OAAQU,GACJ,IAAK,MACL,IAAK,OAAQ,OAAO,EAAKF,gBAAgBR,GACzC,IAAK,OACL,IAAK,OACL,QAAS,OAAO,EAAKD,gBAAgBC,K,EAI7CW,aAAe,SAACD,EAAME,GAClB,OACI,cAACX,EAAA,EAAD,CAAMY,WAAS,EAACX,MAAI,EAACY,UAAU,SAA/B,SACKF,EAAKG,KAAI,SAACf,GAAD,OAAY,EAAKS,WAAWC,EAAMV,S,4CAKxD,WAAU,IAAD,OACL,OACI,cAACC,EAAA,EAAD,CAAMY,WAAS,EAACG,KAAK,SAASC,QAAQ,SAAtC,SACKC,KAAKC,MAAMC,OAAOL,KAAI,SAACM,EAAKC,GAAN,OAAY,EAAKX,aAAaU,EAAIX,KAAMW,EAAIT,e,GAvC9DW,aCiENC,G,kNA5DbC,MAAQ,CACNL,OAAQ,I,EAOVM,S,sBAAW,8BAAAC,EAAA,+EAEY,mDAFZ,cAEDC,EAFC,OAGP,EAAKC,SAAS,CAAED,SAHT,SAIYA,EAAKE,OAJjB,OAIHV,EAJG,OAKP,EAAKS,SAAS,CAAET,OAAQA,EAAOC,MALxB,kDAOPU,QAAQC,MAAR,kDAAyD,KAAIC,QAA7D,MAPO,0D,EAWXC,Y,sBAAc,gCAAAP,EAAA,+DACU,EAAKF,MAAnBG,YADI,MACG,GADH,WAEOA,EAAKE,OAFZ,OAERV,EAFQ,OAGZ,EAAKS,SAAS,CAAET,OAAQA,EAAOC,MAHnB,2C,EAMdc,a,sBAAe,gCAAAR,EAAA,+DACS,EAAKF,MAAnBG,YADK,MACE,GADF,WAEMA,EAAKQ,SAFX,OAEThB,EAFS,OAGb,EAAKS,SAAS,CAAET,OAAQA,EAAOC,MAHlB,2C,uDArBf,WACEH,KAAKQ,a,oBA0BP,WACE,OACE,cAACW,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,cAAC,EAAD,CAAQnB,OAAQF,KAAKO,MAAML,SAC3B,sBAAKmB,UAAU,WAAf,UACE,cAACC,EAAA,EAAD,CACEC,QAAQ,YACRC,QAASxB,KAAKgB,YAFhB,mBAMA,cAACM,EAAA,EAAD,CACEC,QAAQ,YACRC,QAASxB,KAAKiB,aAFhB,kC,GA9CIZ,cCKHoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4d91bc01.chunk.js","sourcesContent":["import { Component } from 'react';\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\n\nclass Layout extends Component {\n\n    renderSmallCell = (placed) => {\n        return (\n            <Grid item>\n                <Paper style={{ backgroundColor: placed ? \"#61dafb\" : \"#626366\", height:10, width: 10 }}/>\n            </Grid>\n        );\n    }\n\n    renderLargeCell = (placed) => {\n        return (\n            <Grid item>\n                <Paper style={{ backgroundColor: placed ? \"#61dafb\" : \"#626366\", height:25, width: 10 }}/>\n            </Grid>\n        );\n    }\n\n    renderCell = (prim, placed) => {\n        switch (prim) {\n            case \"dsp\": return this.renderLargeCell(placed);\n            case \"bram\": return this.renderLargeCell(placed);\n            case \"lutm\": return this.renderSmallCell(placed);\n            case \"lutl\": return this.renderSmallCell(placed);\n            default: return this.renderSmallCell(placed);\n        }\n    }\n\n    renderColumn = (prim, elem) => {\n        return (\n            <Grid container item direction=\"column\">\n                {elem.map((placed) => this.renderCell(prim, placed))}\n            </Grid>\n        );\n    }\n\n    render() {\n        return (\n            <Grid container wrap=\"nowrap\" justify=\"center\">\n                {this.props.layout.map((col, i) => this.renderColumn(col.prim, col.elem))}\n            </Grid>\n        );\n    }\n\n}\n\nexport default Layout;\n","import './App.css'\nimport React, { Component } from 'react';\nimport Container from '@material-ui/core/Container'\nimport Button from '@material-ui/core/Button'\nimport Layout from './components/Layout';\nimport 'fontsource-roboto';\n\nclass App extends Component {\n\n  state = {\n    layout: [],\n  }\n\n  componentDidMount() {\n    this.loadWasm();\n  }\n\n  loadWasm = async () => {\n    try {\n      const wasm = await import(\"demo\");\n      this.setState({ wasm });\n      let layout = await wasm.init();\n      this.setState({ layout: layout.col });\n    } catch (err) {\n      console.error(`Unexpected error in loadWasm. [Message: ${err.message}]`);\n    }\n  }\n\n  clearLayout = async () => {\n    const { wasm = {} } = this.state;\n    let layout = await wasm.init();\n    this.setState({ layout: layout.col });\n  }\n\n  randomLayout = async () => {\n    const { wasm = {} } = this.state;\n    let layout = await wasm.random();\n    this.setState({ layout: layout.col });\n  }\n\n  render() {\n    return (\n      <Container maxWidth=\"lg\">\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <Layout layout={this.state.layout} />\n            <div className=\"controls\">\n              <Button\n                variant=\"contained\"\n                onClick={this.clearLayout}\n              >\n                Clear\n              </Button>\n              <Button\n                variant=\"contained\"\n                onClick={this.randomLayout}\n              >\n                Random\n              </Button>\n            </div>\n          </header>\n        </div>\n      </Container>\n    )\n  }\n\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}